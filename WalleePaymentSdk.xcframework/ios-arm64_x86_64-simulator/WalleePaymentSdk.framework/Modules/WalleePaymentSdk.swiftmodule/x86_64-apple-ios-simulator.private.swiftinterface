// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.10 (swiftlang-5.10.0.13 clang-1500.3.9.4)
// swift-module-flags: -target x86_64-apple-ios12.4-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -enable-bare-slash-regex -module-name WalleePaymentSdk
import AVFoundation
import Combine
import Foundation
import OSLog
import PassKit
import Swift
import SwiftUI
import ThreeDS_SDK
import TwintSDK
import UIKit
@_exported import WalleePaymentSdk
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
public enum ConsoleErrorHandler : Swift.String, Foundation.LocalizedError {
  case MissingTokenValue
  public var errorDescription: Swift.String? {
    get
  }
  public init?(rawValue: Swift.String)
  public typealias RawValue = Swift.String
  public var rawValue: Swift.String {
    get
  }
}
public protocol WalleePaymentResultObserver : AnyObject {
  func paymentResult(paymentResultMessage: PaymentResult)
}
public enum ThemeEnum : Swift.String {
  case LIGHT
  case DARK
  public init?(rawValue: Swift.String)
  public typealias RawValue = Swift.String
  public var rawValue: Swift.String {
    get
  }
}
public enum PaymentResultEnum : Swift.String {
  case CANCELED
  case FAILED
  case COMPLETED
  case TIMEOUT
  case PENDING
  public init?(rawValue: Swift.String)
  public typealias RawValue = Swift.String
  public var rawValue: Swift.String {
    get
  }
}
public struct PaymentResult {
  public var code: PaymentResultEnum
  public var message: Swift.String?
}
public class WalleePaymentSdk {
  public static let SDK_VERSION: Swift.String
  public static func onHandleOpenURL(url: Foundation.URL) -> Swift.Bool
  public init(eventObserver: any WalleePaymentResultObserver)
  public func launchPayment(token: Swift.String)
  public func configureApplePay(merchantId: Swift.String)
  public func configureDeepLink(deepLink: Swift.String)
  public func configureBaseUrl(baseUrl: Swift.String?)
  @available(iOS 13.0, *)
  public func launchPayment(token: Swift.String, isSwiftUI: Swift.Bool)
  public func close()
  public func setLightTheme(light: Foundation.NSMutableDictionary)
  public func setAnimation(type: AnimationEnum)
  public func setDarkTheme(dark: Foundation.NSMutableDictionary)
  public func setCustomTheme(custom: Foundation.NSMutableDictionary?, baseTheme: ThemeEnum)
  @objc deinit
}
public enum AnimationEnum : Swift.String {
  case BUBBLE
  case SLIDE
  case NONE
  public init?(rawValue: Swift.String)
  public typealias RawValue = Swift.String
  public var rawValue: Swift.String {
    get
  }
}
extension ConsoleErrorHandler : Swift.Equatable {}
extension ConsoleErrorHandler : Swift.Hashable {}
extension ConsoleErrorHandler : Swift.RawRepresentable {}
extension ThemeEnum : Swift.Equatable {}
extension ThemeEnum : Swift.Hashable {}
extension ThemeEnum : Swift.RawRepresentable {}
extension PaymentResultEnum : Swift.Equatable {}
extension PaymentResultEnum : Swift.Hashable {}
extension PaymentResultEnum : Swift.RawRepresentable {}
extension AnimationEnum : Swift.Equatable {}
extension AnimationEnum : Swift.Hashable {}
extension AnimationEnum : Swift.RawRepresentable {}
